<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAER6lv9Eepb/RHqW/0R6lv9Eepb/RHqW/0R6lv9Eepb/RHqW/0R6
        lv9Eepb/RHqW/0R6lv9Eepb/RHqW/0R6lv9Eepb/YaDC+YTN8/+FzvX/hc71/4XO9f+FzvX/hc71/4XO
        9f+FzvX/hc71/4XO9f+FzvX/hM3z/2GgwflEepb/QnuXG0iAm8Bgn8H5hc71/4XO9f+FzvX/hc71/4XO
        9f+FzvX/hc71/4XO9f+FzvX/hc71/2Gev/hIgJy+RXaTGgAAAABIm7r/SJu6/0ibuv9Im7r/SJu6/0ib
        uv9Im7r/SJu6/0ibuv9Im7r/SJu6/0ibuv9Im7r/SJu6/wAAAAAAAAAASJu6/6Pu//+j7v//o+7//6Pu
        //+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//0ibuv8AAAAAAAAAAEqdu/mf6/z/o+7//6Pu
        //+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//5/q+/9KnLz4AAAAAAAAAABOoL7Zjdru/6Pu
        //+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+M2e7/TaK/1gAAAAAAAAAAS567dGGx
        zfWj7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//X7HM9EqdvHIAAAAAAAAAAECf
        vwhNoL3cecfg/KPu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//d8ff/EygvdpJkrYHAAAAAAAA
        AAAAAAAATJe9G0yfvdpjtM70jdru/53o+v+j7v//o+7//53o+v+N2u7/YrPO9EygvtlFnboaAAAAAAAA
        AAAAAAAAAAAAAAAAAABVqqoGSZ69bE6gvtlLnr32SJu6/0ibuv9Lnr32TqG+2EqgvGszmcwFAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEmAndlJgJ3YAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEibuv9Im7r/SJu6/0ibuv8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABNoL7LSJu6/0ibuv9NoL7JAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAAAAAAAAAAAAIABAACAAQAAgAEAAIABAACAAQAAwAMAAMAD
        AADgBwAA+B8AAP5/AAD8PwAA/D8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARHyVKUeAnNpJgZ3dSYGd3UmBnd1JgZ3dSYGd3UmB
        nd1JgZ3dSYGd3UmBnd1JgZ3dSYGd3UmBnd1JgZ3dSYGd3UmBnd1JgZ3dSYGd3UmBnd1JgZ3dSYGd3UmB
        nd1JgZ3dSYGd3UmBnd1JgZ3dSYGd3UmBnd1JgZ3dR4Cc2kR8lSlGeJYzWpe264XO9f+FzvX/hc71/4XO
        9f+FzvX/hc71/4XO9f+FzvX/hc71/4XO9f+FzvX/hc71/4XO9f+FzvX/hc71/4XO9f+FzvX/hc71/4XO
        9f+FzvX/hc71/4XO9f+FzvX/hc71/4XO9f+FzvX/hc71/4XO9f9al7brRniWM0Z4ljNal7brhc71/4XO
        9f+FzvX/hc71/4XO9f+FzvX/hc71/4XO9f+FzvX/hc71/4XO9f+FzvX/hc71/4XO9f+FzvX/hc71/4XO
        9f+FzvX/hc71/4XO9f+FzvX/hc71/4XO9f+FzvX/hc71/4XO9f+FzvX/hc71/1qXtutGeJYzRniWM0yE
        ofZalrb/Xpu8/16bvP9em7z/Xpu8/16bvP9em7z/Xpu8/16bvP9em7z/Xpu8/16bvP9em7z/Xpu8/16b
        vP9em7z/Xpu8/16bvP9em7z/Xpu8/16bvP9em7z/Xpu8/16bvP9em7z/Xpu8/16bvP9alrb/TIOh9kZ4
        ljNNgJkKR32YaEqAndpemrv0eL3i/3i94v94veL/eL3i/3i94v94veL/eL3i/3i94v94veL/eL3i/3i9
        4v94veL/eL3i/3i94v94veL/eL3i/3i94v94veL/eL3i/3i94v94veL/eL3i/3i94v94veL/XJm69El/
        nNlFe5ZoTYCZCgAAAAAAAAAAVVWqA0iBncVzuNv9hc71/4XO9f+FzvX/hc71/4XO9f+FzvX/hc71/4XO
        9f+FzvX/hc71/4XO9f+FzvX/hc71/4XO9f+FzvX/hc71/4XO9f+FzvX/hc71/4XO9f+FzvX/hc71/3O2
        2/1JgZ3DgICAAgAAAAAAAAAAAAAAAAAAAABGm7kzR5Gvdk6RsPRjq8z/Y6vM/2OrzP9jq8z/Y6vM/2Or
        zP9jq8z/Y6vM/2OrzP9jq8z/Y6vM/2OrzP9jq8z/Y6vM/2OrzP9jq8z/Y6vM/2OrzP9jq8z/Y6vM/2Or
        zP9jq8z/TpGw9EmTsnRGm7kzAAAAAAAAAAAAAAAAAAAAAFOlw610w9v/f83j/3/N4/9/zeP/f83j/3/N
        4/9/zeP/f83j/3/N4/9/zeP/f83j/3/N4/9/zeP/f83j/3/N4/9/zeP/f83j/3/N4/9/zeP/f83j/3/N
        4/9/zeP/f83j/3/N4/9/zeP/dMPb/1Olw60AAAAAAAAAAAAAAAAAAAAAUqXBpY7b7/+j7v//o+7//6Pu
        //+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu
        //+j7v//o+7//6Pu//+j7v//o+7//6Pu//+O2+//UqPCpAAAAAAAAAAAAAAAAAAAAABRo8CFhtPp/6Pu
        //+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu
        //+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//4XT6P9Oor+DAAAAAAAAAAAAAAAAAAAAAEmc
        u2J6yeD6o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu
        //+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//esnf+Umbu14AAAAAAAAAAAAA
        AAAAAAAASJ23J16vy+qj7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu
        //+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//9ersvqSpq8JgAA
        AAAAAAAAAAAAAAAAAAAAAAAAUKPB4Z7q/P+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu
        //+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//n+r7/1Gk
        wN8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABNor97eMff9aPu//+j7v//o+7//6Pu//+j7v//o+7//6Pu
        //+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu
        //93xt70T5+/eAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAECfvwhRpMLlnen7/6Pu//+j7v//o+7//6Pu
        //+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu
        //+j7v//nej6/1KkweNVqqoGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEyhv1Rhs8zto+3+/6Pu
        //+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu
        //+j7v//o+7//6Pt/v9gsMztTaG+TwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE6h
        v5Bvvtfxo+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu
        //+j7v//o+7//6Pu//+j7v//br3X8U+hv4sAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAgICAAlCjwalmttHyoev9/6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu//+j7v//o+7//6Pu
        //+j7v//o+7//6Pu//+j7v//oOz9/2W10fJQo8CmgICAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAE6fvnJVp8Pridbr/qPu//+j7v//o+7//6Pu//+j7v//o+7//6Pu
        //+j7v//o+7//6Pu//+j7v//o+7//4jV6v5Vp8PrT6K+bgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAESZux5So8KvWKnG7HvJ4PmY5ff/o+7//6Pu
        //+j7v//o+7//6Pu//+j7v//mOT3/3rK3/lWqcXsUKXBrEmbthwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGl7kWTZ6+blGj
        wc9Ro8DkUqPA/Fipx/9Yqcf/UqPA/FGjwORSo8HOTqG9bEmethUAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABKg6Khdbne/3S43f9Lg5+gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABLlrQRSJy6VUeNq5Rdo8T6XKPE+keOrJNInLpVS5a0EQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEmcuzFZq8fzf83j/3/N4/9/zeP/f83j/1mrx/NKmrowAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARqK5C1KkwumX4/b/o+7//6Pu//+X4/b/UqTB6E2Z
        swoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAS569OlGiwc1NoL7rTaC+61Ch
        wcxNm7s4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///////////////4AAAAGAAAABgAAAAYAAAAHAAAAD4AAAB/AA
        AA/AAAADwAAAA8AAAAPgAAAH4AAAB+AAAAfwAAAP8AAAD/gAAB/4AAAf/AAAP/8AAP//gAH///AP///8
        P////D////gf///4H////D//////////////////
</value>
  </data>
</root>